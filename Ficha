name: 'Claudio',
    player: "Ryan",	  player: 'Ryan',
    occupation: "Caçador",	  occupation: 'Caçador',
    age: 21,	  age: 21,
    sex: "male",	  sex: 'male',
    birthplace: "São paulo",	  birthplace: 'São paulo',
    residence: "São paulo",	  residence: 'São paulo',


    life: {	  life: {
        current: 12,	    current: 12,
        max: 12,	    max: 12,
  },
  sanity: {
    current: 62,
    max: 62,
  },

  weapons: [
    {
      name: 'Balestra',
      type: 'Arco',
      damage: '1d20',
      numCurrent: 1,
      numMax: 1,
      attack: 5,
      reach: '10 m',
      defect: 1,
      area: '',
    },	    },
    sanity: {	    {
        current: 62,	      name: 'Canivete',
        max: 62,	      type: 'Briga',
      damage: '1d10',
      numCurrent: '',
      numMax: '',
      attack: '1/2',
      reach: '',
      defect: 1,
      area: '',
    },	    },

  ],
    weapons: [	  attributes: [
        {	    {
            name: "Balestra",	      type: 'Aparência',
            type: "Arco",	      amount: 10,
            damage: "1d20",	    },
            numCurrent: 1,	    {
            numMax: 1,	      type: 'Constituição',
            attack: 5,	      amount: 10,
            reach: "10 m",	    },
            defect: 1,	    {
            area: "",	      type: 'Destreza',
        },	      amount: 10,
        {	    },
            name: "Canivete",	    {
            type: "Briga",	      type: 'Educação',
            damage: "1d10",	      amount: 10,
            numCurrent: "",	    },
            numMax: "",	    {
            attack: "1/2",	      type: 'Força',
            reach: "",	      amount: 10,
            defect: 1,	    },
            area: "",	    {
        },	      type: 'Inteligência',
    ],	      amount: 10,
    },
    {
      type: 'Poder',
      amount: 10,
    },
    {
      type: 'Sorte',
      amount: 10,
    },
  ],
}	}


data.weapons.map((weapon, index) => {	data.weapons.map((weapon, index) => {
    addWeaponToTable(weapon, index);	  addWeaponToTable(weapon, index)
});	})



data.attributes.map((attribute, index) => {
$("#name").val(data.name);	  addAttribute(attribute, index)
$("#player").val(data.player);	})
$("#occupation").val(data.occupation);	
$("#age").val(data.age);	$('#name').val(data.name)
$("#sex").val(data.sex);	$('#player').val(data.player)
$("#birthplace").val(data.birthplace);	$('#occupation').val(data.occupation)
$("#residence").val(data.residence);	$('#age').val(data.age)

$('#sex').val(data.sex)
$(".lifeBar").css("width", `${calculateBar(data.life.current, data.life.max)}%`);	$('#birthplace').val(data.birthplace)
$("#lifeCount").text(`${data.life.current}/${data.life.max}`)	$('#residence').val(data.residence)
$("#lifeCurrent").val(data.life.current)	
$("#lifeMax").val(data.life.max)	$('.lifeBar').css('width', `${calculateBar(data.life.current, data.life.max)}%`)

$('#lifeCount').text(`${data.life.current}/${data.life.max}`)
$(".sanityBar").css("width", `${calculateBar(data.sanity.current, data.sanity.max)}%`);	$('#lifeCurrent').val(data.life.current)
$("#sanityCount").text(`${data.sanity.current}/${data.sanity.max}`)	$('#lifeMax').val(data.life.max)
$("#sanityCurrent").val(data.sanity.current)	
$("#sanityMax").val(data.sanity.max)	$('.sanityBar').css(

  'width',

  `${calculateBar(data.sanity.current, data.sanity.max)}%`
const diceModal = $("#diceAttributes");	)
const lifeModal = $("#lifeModal");	$('#sanityCount').text(`${data.sanity.current}/${data.sanity.max}`)
const sanityModal = $("#sanityModal");	$('#sanityCurrent').val(data.sanity.current)

$('#sanityMax').val(data.sanity.max)
$(window).click(function(event) {	
    if (event.target.id == "diceAttributes") {	const diceModal = $('#diceAttributes')
        diceModal.css("display", "none");	const lifeModal = $('#lifeModal')
        $("#diceNumber").text("");	const sanityModal = $('#sanityModal')
        $("#diceType").text("");	

$(window).click(function (event) {
        $(".modalDice").css("transform", "rotate(0deg)");	  if (event.target.id == 'diceAttributes') {
        $(".modalDice").css("-webkit-transform", "rotate(0deg)");	    diceModal.css('display', 'none')
    }else if (event.target.id == "lifeModal") {	    $('#diceNumber').text('')
        lifeModal.css("display", "none");	    $('#diceType').text('')
    }else if (event.target.id == "sanityModal") {	
        sanityModal.css("display", "none");	    $('.modalDice').css('transform', 'rotate(0deg)')
    }else if (event.target.id == "addWeaponModal") {	    $('.modalDice').css('-webkit-transform', 'rotate(0deg)')
        closeModal("#addWeaponModal");	  } else if (event.target.id == 'lifeModal') {
    }	    lifeModal.css('display', 'none')
});	  } else if (event.target.id == 'sanityModal') {

    sanityModal.css('display', 'none')
function rollAtribute(atribute){	  } else if (event.target.id == 'addWeaponModal') {

    closeModal('#addWeaponModal')
    console.log(this)	  }

})
    diceModal.css("display", "block");	

function rollAtribute(atribute, amount) {
    setTimeout(() => {	  console.log(this)
        $(".modalDice").css("transform", "rotate(360deg)");	
        $(".modalDice").css("-webkit-transform", "rotate(360deg)");	  diceModal.css('display', 'block')
    }, 1000);	
  setTimeout(() => {
    $('.modalDice').css('transform', 'rotate(360deg)')
    $('.modalDice').css('-webkit-transform', 'rotate(360deg)')
  }, 1000)

  setTimeout(() => {
    const diceNumber = rollDice('1d20')
    const diceType = calcDice(amount, diceNumber)
    $('#diceNumber').text(diceNumber)
    $('#diceType').text(diceType)


    setTimeout(() => {	    setTimeout(() => {

      diceModal.css('display', 'none')
        const diceNumber = rollDice("1d20")	      $('#diceNumber').text('')
        const diceType = calcDice(11, diceNumber)	      $('#diceType').text('')
        $("#diceNumber").text(diceNumber)	
        $("#diceType").text(diceType)	      $('.modalDice').css('transform', 'rotate(0deg)')

      $('.modalDice').css('-webkit-transform', 'rotate(0deg)')
        setTimeout(() => {	    }, 20000)
            diceModal.css("display", "none");	  }, 2000)
            $("#diceNumber").text("");	
            $("#diceType").text("");	

            $(".modalDice").css("transform", "rotate(0deg)");	
            $(".modalDice").css("-webkit-transform", "rotate(0deg)");	
        }, 20000);	
    }, 2000);	
}	}


$(".lifeBar").click(function(){	$('.lifeBar').click(function () {

  console.log(this)
    console.log(this);	  lifeModal.css('display', 'block')
    lifeModal.css("display", "block");	})
});	

$('.sanityBar').click(function () {
$(".sanityBar").click(function(){	  console.log(this)

  sanityModal.css('display', 'block')
    console.log(this);	})
    sanityModal.css("display", "block");	
});	$('#addWeapon').click(function () {

  openModal('#addWeaponModal')
$("#addWeapon").click(function(){	})
    openModal("#addWeaponModal");	
});	$('#lesion').change(function () {

  if (this.checked) {
$('#lesion').change(function() {	    console.log('Modo lesionamento grave ativado!')
    if(this.checked) {	  } else {
        console.log('Modo lesionamento grave ativado!');	    console.log('Modo lesionamento grave desativado!')
    }else {	  }
        console.log('Modo lesionamento grave desativado!');	})
    } 	
});	$('#injury').change(function () {

  if (this.checked) {
$('#injury').change(function() {	    console.log('Modo lesionamento ativado!')
    if(this.checked) {	  } else {
        console.log('Modo lesionamento ativado!');	    console.log('Modo lesionado desativado!')
    }else {	  }
        console.log('Modo lesionado desativado!');	})
    } 	
});	$('#dying').change(function () {

  if (this.checked) {
$('#dying').change(function() {	    console.log('Modo morrendo ativado!')
    if(this.checked) {	  } else {
        console.log('Modo morrendo ativado!');	    console.log('Modo morrendo desativado!')
    }else {	  }
        console.log('Modo morrendo desativado!');	})
    } 	
});	$('#traumatized').change(function () {

  if (this.checked) {
$('#traumatized').change(function() {	    console.log('Modo traumatizado ativado!')
    if(this.checked) {	  } else {
        console.log('Modo traumatizado ativado!');	    console.log('Modo traumatizado desativado!')
    }else {	  }
        console.log('Modo traumatizado desativado!');	})
    } 	
});	$('#crazed').change(function () {

  if (this.checked) {
$('#crazed').change(function() {	    console.log('Modo enlouquecido ativado!')
    if(this.checked) {	  } else {
        console.log('Modo enlouquecido ativado!');	    console.log('Modo enlouquecido desativado!')
    }else {	  }
        console.log('Modo enlouquecido desativado!');	})
    } 	
});	$('#addWeaponForm').submit(function (event) {

  var weaponType = ''
$('#addWeaponForm').submit(function( event ) {	

  if ($('#weaponType').val() == 'fire') {
    var weaponType = "";	    weaponType = 'Fogo'

  } else if ($('#weaponType').val() == 'arch') {
    if($("#weaponType").val() == "fire"){	    weaponType = 'Arco'
        weaponType = "Fogo";	  } else if ($('#weaponType').val() == 'fight') {
    }else if($("#weaponType").val() == "arch") {	    weaponType = 'Briga'
        weaponType = "Arco";	  }
    }else if($("#weaponType").val() == "fight") {	
        weaponType = "Briga";	  const weapon = {
    }	    name: $('#weaponName').val(),

    type: weaponType,
    const weapon = {	    damage: $('#weapondamage').val(),
        name: $("#weaponName").val(),	    numCurrent: $('#weaponNumCurrent').val(),
        type: weaponType,	    numMax: $('#weaponNumMax').val(),
        damage: $("#weapondamage").val(),	    attack: $('#weaponAttack').val(),
        numCurrent: $("#weaponNumCurrent").val(),	    reach: $('#weaponReach').val(),
        numMax: $("#weaponNumMax").val(),	    defect: $('#weaponDefect').val(),
        attack:$("#weaponAttack").val(),	    area: $('#weaponArea').val(),
        reach: $("#weaponReach").val(),	  }
        defect: $("#weaponDefect").val(),	
        area: $("#weaponArea").val(),	  data.weapons.push(weapon)
    }	  const id = data.weapons.length - 1

  addWeaponToTable(weapon, id)
    data.weapons.push(weapon);	
    const id = data.weapons.length-1;	  closeModal('#addWeaponModal')
    addWeaponToTable(weapon, id);	  event.preventDefault()

})
    closeModal("#addWeaponModal");	
    event.preventDefault();	$('#changeLife').submit(function (event) {
});	  let current = Number($('#lifeCurrent').val())

  const max = Number($('#lifeMax').val())
$('#changeLife').submit(function( event ) {	

  if (current > max) {
    let current = Number($("#lifeCurrent").val())	    alert('A vida atual não pode ser maior que a maxima!')
    const max = Number($("#lifeMax").val())	    current = max

  }
    if(current > max) {	
        alert('A vida atual não pode ser maior que a maxima!')	  data.life.current = current
        current = max	  data.life.max = max
    }	  $('.lifeBar').css('width', `${calculateBar(current, max)}%`)

  $('#lifeCount').text(`${current}/${max}`)
    data.life.current = current	
    data.life.max = max	  closeModal('#lifeModal')
    $(".lifeBar").css("width", `${calculateBar(current, max)}%`)	  event.preventDefault()
    $("#lifeCount").text(`${current}/${max}`)	})


    closeModal("#lifeModal");	$('#changeSanity').submit(function (event) {
    event.preventDefault();	  let current = Number($('#sanityCurrent').val())
});	  const max = Number($('#sanityMax').val())


$('#changeSanity').submit(function( event ) {	  if (current > max) {

    alert('A sanidade atual não pode ser maior que a maxima!')
    let current = Number($("#sanityCurrent").val())	    current = max
    const max = Number($("#sanityMax").val())	  }


    if(current > max) {	  data.sanity.current = current
        alert('A sanidade atual não pode ser maior que a maxima!')	  data.sanity.max = max
        current = max	  $('.sanityBar').css('width', `${calculateBar(current, max)}%`)
    }	  $('#sanityCount').text(`${current}/${max}`)


    data.sanity.current = current	  closeModal('#sanityModal')
    data.sanity.max = max	  event.preventDefault()
    $(".sanityBar").css("width", `${calculateBar(current, max)}%`)	})
    $("#sanityCount").text(`${current}/${max}`)	

function calculateBar(current, max) {
    closeModal("#sanityModal");	  if (current > max) {
    event.preventDefault();	    return 100
});	  } else if (current < 0) {

    return 0
function calculateBar(current, max){	  } else {
    if (current > max){	    const value = (100 / max) * current
        return 100;	    const string = value.toString().split('.')[0]
    } else if (current < 0) {	    const percentage = Number(string)
        return 0;	    return percentage
    } else {	  }
        const value = (100/max)*current;	
        const string = value.toString().split(".")[0];	
        const percentage = Number(string);	
        return percentage;	
    }	
}	}



function calcDice(ability, dice) {	function calcDice(ability, dice) {
    // Não encontrei uma forma mais fácil, então fiz assim	  // Não encontrei uma forma mais fácil, então fiz assim


    const table = [	  const table = [
        { normal: 20 },	    { normal: 20 },
        { normal: 19, good: 20 },	    { normal: 19, good: 20 },
        { normal: 18, good: 20 },	    { normal: 18, good: 20 },
        { normal: 17, good: 19 },	    { normal: 17, good: 19 },
        { normal: 16, good: 19, extreme: 20 },	    { normal: 16, good: 19, extreme: 20 },
        { normal: 15, good: 18, extreme: 20 },	    { normal: 15, good: 18, extreme: 20 },
        { normal: 14, good: 18, extreme: 20 },	    { normal: 14, good: 18, extreme: 20 },
        { normal: 13, good: 17, extreme: 20 },	    { normal: 13, good: 17, extreme: 20 },
        { normal: 12, good: 17, extreme: 20 },	    { normal: 12, good: 17, extreme: 20 },
        { normal: 11, good: 16, extreme: 20 },	    { normal: 11, good: 16, extreme: 20 },
        { normal: 10, good: 16, extreme: 19 },	    { normal: 10, good: 16, extreme: 19 },
        { normal: 9, good: 16, extreme: 19 },	    { normal: 9, good: 16, extreme: 19 },
        { normal: 8, good: 15, extreme: 19 },	    { normal: 8, good: 15, extreme: 19 },
        { normal: 7, good: 14, extreme: 19 },	    { normal: 7, good: 14, extreme: 19 },
        { normal: 6, good: 14, extreme: 18 },	    { normal: 6, good: 14, extreme: 18 },
        { normal: 5, good: 13, extreme: 18 },	    { normal: 5, good: 13, extreme: 18 },
        { normal: 4, good: 13, extreme: 18 },	    { normal: 4, good: 13, extreme: 18 },
        { normal: 3, good: 12, extreme: 18 },	    { normal: 3, good: 12, extreme: 18 },
        { normal: 2, good: 12, extreme: 18 },	    { normal: 2, good: 12, extreme: 18 },
        { normal: 1, good: 11, extreme: 17 },	    { normal: 1, good: 11, extreme: 17 },
    ]	  ]


    const type = table[ability-1]	  const type = table[ability - 1]


    if(type.extreme) {	  if (type.extreme) {

    if (dice >= type.extreme) return 'Extremo'
        if(dice >= type.extreme) return 'Extremo'	    if (dice >= type.good) return 'Sucesso Bom'
        if(dice >= type.good) return 'Sucesso Bom'	    if (dice >= type.normal) return 'Sucesso Normal'
        if(dice >= type.normal) return 'Sucesso Normal'	    if (dice <= type.normal) return 'Fracasso'
        if(dice <= type.normal) return "Fracasso"	  } else if (type.good) {

    if (dice >= type.good) return 'Sucesso Bom'
    } else if(type.good) {	    if (dice >= type.normal) return 'Sucesso Normal'
        if(dice >= type.good) return 'Sucesso Bom'	    if (dice <= type.normal) return 'Fracasso'
        if(dice >= type.normal) return 'Sucesso Normal'	  } else if (type.normal) {
        if(dice <= type.normal) return "Fracasso"	    if (dice >= type.normal) return 'Sucesso Normal'
    } else if(type.normal) {	    if (dice <= type.normal) return 'Fracasso'
        if(dice >= type.normal) return 'Sucesso Normal'	  }
        if(dice <= type.normal) return "Fracasso"	
    }	

}	}


function rollDice(dice) {	function rollDice(dice) {
  let [count, max] = dice.split('d')


    let [count, max] = dice.split('d')	  if (Number(count) && Number(max)) {

    count = Number(count)
    if(Number(count) && Number(max)) {	    max = Number(max)
        count = Number(count)	
        max = Number(max)	


        let total = 0	    let total = 0


        for (let i = 0; i < count; i++) {	    for (let i = 0; i < count; i++) {
            total += Math.floor(Math.random() * max+1)	      total += Math.floor(Math.random() * max + 1)
        }	

        return total	
    }else {	
        return null	
    }	    }

    return total
  } else {
    return null
  }
}	}


function openModal(modal){	function openModal(modal) {
    const Modal = $(modal);	  const Modal = $(modal)
    Modal.css("display", "block");	  Modal.css('display', 'block')
}	}


function closeModal(modal){	function closeModal(modal) {
    const Modal = $(modal);	  const Modal = $(modal)
    Modal.css("display", "none");	  Modal.css('display', 'none')
}	}


function addWeaponToTable(weapon, id) {	function addWeaponToTable(weapon, id) {
    const newWeapon = $(`<tr id="${id}">	  const newWeapon = $(`<tr id="weapon_${id}">
        <td>	        <td>
            <button onclick="deleteWeapon(${id})">	            <button onclick="deleteWeapon(${id})">
                <i class="fa fa-trash-o trashcan"></i>	                <i class="fa fa-trash-o trashcan"></i>
@@ -348,10 +375,21 @@ function addWeaponToTable(weapon, id) {
        <td>${weapon.reach}</td>	        <td>${weapon.reach}</td>
        <td>${weapon.defect}</td>	        <td>${weapon.defect}</td>
        <td>${weapon.area}</td>	        <td>${weapon.area}</td>
    </tr>`);	    </tr>`)
    $("table#weapons").append(newWeapon);	  $('table#weapons').append(newWeapon)
}

function addAttribute(attribute, id) {
  const newAttribute = $(`<div class="attribute" id="attribute_${id}">
    <a onclick="rollAtribute('${attribute.type}', ${attribute.amount})">
      <img class="attributeDice" src="./img/dado.png" alt="Dado">
    </a>
    <h3>${attribute.type}</h3>
    <input type="text" name="appearance" value="${attribute.amount}" id="attribute_input_${id}" disabled>
  </div>`)
  $('#attributesList').append(newAttribute)
}	}


function deleteWeapon(id) {	function deleteWeapon(id) {
    $(`tr#${id}`).remove();	  $(`tr#${id}`).remove()
} 	}
  504  index.html 
@@ -1,293 +1,249 @@
<!DOCTYPE html>	<!DOCTYPE html>
<html lang="pt-br">	<html lang="pt-br">
    <head>	  <head>
        <meta charset="UTF-8">	    <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0">	    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>	    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">	    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
    />


        <link rel="stylesheet" href="styles.css">	    <link rel="stylesheet" href="styles.css" />


        <title>Ficha do personagem</title>	    <title>Ficha do personagem</title>
    </head>	  </head>
    <body>	  <body>
        <h1 class="title">Perfil de investigador</h1>	    <h1 class="title">Perfil de investigador</h1>


        <!-- modal -->	    <!-- modal -->
        <div id="diceAttributes" class="modal">	    <div id="diceAttributes" class="modal">
            <div class="modal-content">	      <div class="modal-content">
                <img class="modalDice" src="./img/dado.png" alt="Dado">	        <img class="modalDice" src="./img/dado.png" alt="Dado" />
                <h2 id="diceNumber"></h2>	        <h2 id="diceNumber"></h2>
                <p id="diceType"></p>	        <p id="diceType"></p>
            </div>	      </div>
    </div>


        </div>	    <div id="lifeModal" class="modal with-input">
      <div class="modal-content">
        <h2>MODIFICAR VIDA</h2>
        <hr />
        <form class="formModal" id="changeLife">
          <h3>Atual</h3>
          <input type="number" name="current" id="lifeCurrent" min="0" />
          <h3>Máximo</h3>
          <input type="number" name="max" id="lifeMax" min="0" />
          <input type="submit" value="Salvar" />
        </form>
      </div>
    </div>


        <div id="lifeModal" class="modal with-input">	    <div id="sanityModal" class="modal with-input">
            <div class="modal-content">	      <div class="modal-content">
                <h2>MODIFICAR VIDA</h2>	        <h2>MODIFICAR SANIDADE</h2>
                <hr>	        <hr />
                <form class="formModal" id="changeLife">	        <form class="formModal" id="changeSanity">
                    <h3>Atual</h3>	          <h3>Atual</h3>
                    <input type="number" name="current" id="lifeCurrent" min="0">	          <input
                    <h3>Máximo</h3>	            type="number"
                    <input type="number" name="max" id="lifeMax" min="0">	            name="sanityCurrent"
                    <input type="submit" value="Salvar">	            id="sanityCurrent"
                </form>	            min="0"
            </div>	          />
        </div>	          <h3>Máximo</h3>
          <input type="number" name="sanityMax" id="sanityMax" min="0" />
          <input type="submit" value="Salvar" />
        </form>
      </div>
    </div>


        <div id="sanityModal" class="modal with-input">	    <div id="addWeaponModal" class="modal with-input">
            <div class="modal-content">	      <div class="modal-content">
                <h2>MODIFICAR SANIDADE</h2>	        <h2>ADICIONAR ARMA</h2>
                <hr>	        <hr />
                <form class="formModal" id="changeSanity">	        <form id="addWeaponForm" action="">
                    <h3>Atual</h3>	          <table class="weapons" id="newWeapon">
                    <input type="number" name="sanityCurrent" id="sanityCurrent"  min="0">	            <tr>
                    <h3>Máximo</h3>	              <th>Nome</th>
                    <input type="number" name="sanityMax" id="sanityMax"  min="0">	              <th>Tipo</th>
                    <input type="submit" value="Salvar">	              <th>Dano</th>
                </form>	              <th>Num. Atual</th>
            </div>	              <th>Num. Máximo</th>
        </div>	              <th>Ataque</th>
              <th>Alcance</th>
              <th>Defeito</th>
              <th>Área</th>
            </tr>
            <tr>
              <td>
                <input type="text" name="weaponName" id="weaponName" />
              </td>
              <td>
                <select id="weaponType" name="weaponType">
                  <option value="fire">Fogo</option>
                  <option value="arch">Arco</option>
                  <option value="fight">Briga</option>
                </select>
              </td>
              <td>
                <input type="text" name="weaponDamage" id="weaponDamege" />
              </td>
              <td>
                <input
                  type="text"
                  name="weaponNumCurrent"
                  id="weaponNumCurrent"
                />
              </td>
              <td>
                <input type="text" name="weaponNumMax" id="weaponNumMax" />
              </td>
              <td>
                <input type="text" name="weaponAttack" id="weaponAttack" />
              </td>
              <td>
                <input type="text" name="weaponReach" id="weaponReach" />
              </td>
              <td>
                <input type="text" name="weaponDefect" id="weaponDefect" />
              </td>
              <td>
                <input type="text" name="weaponArea" id="weaponArea" />
              </td>
            </tr>
          </table>
          <input type="submit" value="Salvar" />
        </form>
      </div>
    </div>


        <div id="addWeaponModal" class="modal with-input">	    <div class="container">
            <div class="modal-content">	      <div class="details border">
                <h2>ADICIONAR ARMA</h2>	        <h2 class="grid-title">DETALHES PESSOAIS</h2>
                <hr>	        <hr />
                <form id="addWeaponForm" action="">	
                    <table class="weapons" id="newWeapon">	
                        <tr>	
                            <th>Nome</th>	
                            <th>Tipo</th>	
                            <th>Dano</th>	
                            <th>Num. Atual</th>	
                            <th>Num. Máximo</th>	
                            <th>Ataque</th>	
                            <th>Alcance</th>	
                            <th>Defeito</th>	
                            <th>Área</th>	
                        </tr>	
                        <tr>	
                            <td>	
                                <input type="text" name="weaponName" id="weaponName">	
                            </td>	
                            <td>	
                                <select id="weaponType" name="weaponType">	
                                    <option value="fire">Fogo</option>	
                                    <option value="arch">Arco</option>	
                                    <option value="fight">Briga</option>	
                                </select>	
                            </td>	
                            <td>	
                                <input type="text" name="weaponDamage" id="weaponDamege">	
                            </td>	
                            <td>	
                                <input type="text" name="weaponNumCurrent" id="weaponNumCurrent">	
                            </td>	
                            <td>	
                                <input type="text" name="weaponNumMax" id="weaponNumMax">	
                            </td>	
                            <td>	
                                <input type="text" name="weaponAttack" id="weaponAttack">	
                            </td>	
                            <td>	
                                <input type="text" name="weaponReach" id="weaponReach">	
                            </td>	
                            <td>	
                                <input type="text" name="weaponDefect" id="weaponDefect">	
                            </td>	
                            <td>	
                                <input type="text" name="weaponArea" id="weaponArea">	
                            </td>	
                        </tr>	
                    </table>	
                    <input type="submit" value="Salvar">	
                </form>	
            </div>	
        </div>	


        <div class="container">	        <div class="inputs">
            <div class="details border">	          <h4>Nome</h4>
                <h2 class="grid-title">DETALHES PESSOAIS</h2>	          <input type="text" name="name" id="name" value="" />
                <hr>	          <h4>Jogador</h4>
          <input type="text" name="player" id="player" value="" />
          <h4>Ocupação</h4>
          <input type="text" name="occupation" id="occupation" value="" />
          <h4>Idade</h4>
          <input type="text" name="age" id="age" value="" />
          <h4>Sexo</h4>
          <select id="sex" name="sex">
            <option value="male">Masculino</option>
            <option value="female">Feminino</option>
            <option value="other">Outros</option>
          </select>
          <h4>Local de nascimento</h4>
          <input type="text" name="birthplace" id="birthplace" value="" />
          <h4>Local de residência</h4>
          <input type="text" name="residence" id="residence" value="" />
        </div>
      </div>
      <div class="character">
        <div class="characterHeader">
          <img class="characterPhoto" src="./img/character.png" alt="Foto" />
          <img class="dice" src="./img/dado.png" alt="Dado" />
        </div>


                <div class="inputs">	        <div class="bars">
                    <h4>Nome</h4>	          <h4>Vida</h4>
                    <input type="text" name="name" id="name" value="">	          <div class="bar">
                    <h4>Jogador</h4>	            <div class="lifeBar" style="width: 0%">
                    <input type="text" name="player" id="player" value="">	              <p class="barcount" id="lifeCount"></p>
                    <h4>Ocupação</h4>	
                    <input type="text" name="occupation" id="occupation" value="">	
                    <h4>Idade</h4>	
                    <input type="text" name="age" id="age" value="">	
                    <h4>Sexo</h4>	
                    <select id="sex" name="sex">	
                        <option value="male">Masculino</option>	
                        <option value="female">Feminino</option>	
                        <option value="other">Outros</option>	
                    </select>	
                    <h4>Local de nascimento</h4>	
                    <input type="text" name="birthplace" id="birthplace" value="">	
                    <h4>Local de residência</h4>	
                    <input type="text" name="residence" id="residence" value="">	
                </div>	
            </div>	            </div>
            <div class="character">	          </div>
                <div class="characterHeader">	          <div class="checkboxs">
                    <img class="characterPhoto" src="./img/character.png" alt="Foto">	            <form action="">
                    <img class="dice" src="./img/dado.png" alt="Dado">	              <input type="checkbox" id="lesion" name="lesion" value="lesion" />
                </div>	              <label for="lesion"> Lesão grave</label>

              <input type="checkbox" id="injury" name="injury" value="injury" />
                <div class="bars">	              <label for="injury"> Lesionamento</label>
                    <h4>Vida</h4>	              <input type="checkbox" id="dying" name="dying" value="dying" />
                    <div class="bar">	              <label for="dying"> Morrendo</label>
                        <div class="lifeBar" style="width: 0%;">	            </form>
                            <p class="barcount" id="lifeCount"></p>	          </div>
                        </div>	
                    </div>	
                    <div class="checkboxs">	
                        <form action="">	
                            <input type="checkbox" id="lesion" name="lesion" value="lesion">	
                            <label for="lesion"> Lesão grave</label>	
                            <input type="checkbox" id="injury" name="injury" value="injury">	
                            <label for="injury"> Lesionamento</label>	
                            <input type="checkbox" id="dying" name="dying" value="dying">	
                            <label for="dying"> Morrendo</label>	
                        </form>	
                    </div>	


                    <h4>Sanidade</h4>	          <h4>Sanidade</h4>
                    <div class="sanity">	          <div class="sanity">
                        <div class="contentSanityBar">	            <div class="contentSanityBar">
                            <div class="sanityBar" style="width: 0%;">	              <div class="sanityBar" style="width: 0%">
                                <p class="barcount" id="sanityCount"></p>	                <p class="barcount" id="sanityCount"></p>
                            </div>	              </div>
                        </div>	
                        <img class="sanityDice" src="./img/dado.png" alt="Dado">	
                    </div>	
                    <div class="checkboxs">	
                        <input type="checkbox" id="traumatized" name="traumatized" value="traumatized">	
                        <label for="traumatized"> Traumatizado</label>	
                        <input type="checkbox" id="crazed" name="crazed" value="crazed">	
                        <label for="crazed"> Enlouquecido</label>	
                    </div>	
                </div>	

                <div class="extra">	
                    <div class="damage">	
                        <p>Dano extra</p>	
                        <input type="text" name="damage" id="damage">	
                    </div>	
                    <div class="body">	
                        <p>Corpo</p>	
                        <input type="text" name="damage" id="damage">	
                    </div>	
                    <div class="exposure">	
                        <p>Exposição paranormal</p>	
                        <input type="text" name="damage" id="damage">	
                    </div>	
                </div>	
            </div>	            </div>
            <div class="attributes border">	            <img class="sanityDice" src="./img/dado.png" alt="Dado" />
                <h2 class="grid-title">ATRIBUTOS</h2>	          </div>
                <hr>	          <div class="checkboxs">

            <input
                <div class="attributesList">	              type="checkbox"
                    <div class="attribute">	              id="traumatized"
                        <a onclick="rollAtribute('appearance')">	              name="traumatized"
                            <img class="attributeDice" src="./img/dado.png" alt="Dado">	              value="traumatized"
                        </a>	            />
                        <h3>Aparência</h3>	            <label for="traumatized"> Traumatizado</label>
                        <input type="text" name="appearance" id="appearance" disabled>	            <input type="checkbox" id="crazed" name="crazed" value="crazed" />
                    </div>	            <label for="crazed"> Enlouquecido</label>
                    <div class="attribute">	          </div>
                        <a onclick="alert(1);">	        </div>
                            <img class="attributeDice" src="./img/dado.png" alt="Dado">	
                        </a>	
                        <h3>Constituição</h3>	
                        <input type="text" name="attribute" id="attribute">	
                    </div>	
                    <div class="attribute">	
                        <a onclick="alert(1);">	
                            <img class="attributeDice" src="./img/dado.png" alt="Dado">	
                        </a>	
                        <h3>Destreza</h3>	
                        <input type="text" name="attribute" id="attribute">	
                    </div>	
                    <div class="attribute">	
                        <a onclick="alert(1);">	
                            <img class="attributeDice" src="./img/dado.png" alt="Dado">	
                        </a>	
                        <h3>Educação</h3>	
                        <input type="text" name="attribute" id="attribute">	
                    </div>	
                    <div class="attribute">	
                        <a onclick="alert(1);">	
                            <img class="attributeDice" src="./img/dado.png" alt="Dado">	
                        </a>	
                        <h3>Força</h3>	
                        <input type="text" name="attribute" id="attribute">	
                    </div>	
                    <div class="attribute">	
                        <a onclick="alert(1);">	
                            <img class="attributeDice" src="./img/dado.png" alt="Dado">	
                        </a>	
                        <h3>Inteligência</h3>	
                        <input type="text" name="attribute" id="attribute">	
                    </div>	
                    <div class="attribute">	
                        <a onclick="alert(1);">	
                            <img class="attributeDice" src="./img/dado.png" alt="Dado">	
                        </a>	
                        <h3>Poder</h3>	
                        <input type="text" name="attribute" id="attribute">	
                    </div>	
                    <div class="attribute">	
                        <a onclick="alert(1);">	
                            <img class="attributeDice" src="./img/dado.png" alt="Dado">	
                        </a>	
                        <h3>Sorte</h3>	
                        <input type="text" name="attribute" id="attribute">	
                    </div>	
                </div>	


            </div>	        <div class="extra">
            <div class="expertise border">	          <div class="damage">
                <h2 class="grid-title">PERICIA</h2>	            <p>Dano extra</p>
                <hr>	            <input type="text" name="damage" id="damage" />
            </div>	          </div>
            <div class="combat border">	          <div class="body">
                <div class="combatHeader">	            <p>Corpo</p>
                    <h2 class="grid-title">COMBATE</h2>	            <input type="text" name="damage" id="damage" />
                    <button id="addWeapon">&plus;</button>	          </div>
                </div>	          <div class="exposure">
                <hr>	            <p>Exposição paranormal</p>
            <input type="text" name="damage" id="damage" />
          </div>
        </div>
      </div>
      <div class="attributes border">
        <h2 class="grid-title">ATRIBUTOS</h2>
        <hr />


                <table class="weapons" id="weapons">	        <div class="attributesList" id="attributesList"></div>
                    <tr>	      </div>
                        <th>Nome</th>	      <div class="expertise border">
                        <th>Tipo</th>	        <h2 class="grid-title">PERICIA</h2>
                        <th>Dano</th>	        <hr />
                        <th>Nun. Atual</th>	      </div>
                        <th>Num. Máximo</th>	      <div class="combat border">
                        <th>Ataque</th>	        <div class="combatHeader">
                        <th>Alcance</th>	          <h2 class="grid-title">COMBATE</h2>
                        <th>Defeito</th>	          <button id="addWeapon">&plus;</button>
                        <th>Área</th>	        </div>
                    </tr>	        <hr />

                </table>	


            </div>	        <table class="weapons" id="weapons">
          <tr>
            <th>Nome</th>
            <th>Tipo</th>
            <th>Dano</th>
            <th>Nun. Atual</th>
            <th>Num. Máximo</th>
            <th>Ataque</th>
            <th>Alcance</th>
            <th>Defeito</th>
            <th>Área</th>
          </tr>
        </table>
      </div>


            <div class="expertise2 border">	      <div class="expertise2 border">
                <h2 class="grid-title">PERICIA</h2>	        <h2 class="grid-title">PERICIA</h2>
                <hr>	        <hr />
            </div>	      </div>
        </div>	    </div>


        <!-- <div class="modal-overlay active">	    <!-- <div class="modal-overlay active">
            <div class="modal">	            <div class="modal">
                <h2>MODIFICAR VIDA</h2>	                <h2>MODIFICAR VIDA</h2>
                <hr>	                <hr>
@@ -302,6 +258,6 @@ <h2>MODIFICAR VIDA</h2>
            </div>	            </div>
        </div> -->	        </div> -->


        <script src="characterSheet.js"></script>	    <script src="characterSheet.js"></script>
    </body>	  </body>
</html> 	</html>
